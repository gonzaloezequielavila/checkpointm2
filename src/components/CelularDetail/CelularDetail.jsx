/* 8Ô∏è‚É£ ***COMPONENTE CelularDetail*** 8Ô∏è‚É£

Implementar el componente CelularDetail. En este ejercicio tendr√°s que renderizar las diferentes propiedades del celular.
üì¢¬°Sigue las instrucciones de los tests!üì¢

REQUISITOS
üü¢ Tendr√°s que despachar una action con el "id" del celular cuando se monta el componente. Luego, traer esa 
informaci√≥n de tu estado global.
üü¢ Tendr√°s que renderizar algunos datos del celular correspondiente.

IMPORTANTE
‚ùóImportar las actions como Object Modules, ¬°sino los test no funcionar√°n!
‚ùóEste componente debe ser FUNCIONAL.
‚ùóPara obtener el "id" puedes utilizar useParams.
‚ùóRecuerda que las peticiones as√≠ncronas a los servidores suelen demorar. Debes checkear tener disponible la informaci√≥n a utlizar.
‚ùóNO hacer un destructuring de los hooks de React, debes utilizarlos con la siguiente forma:
      - 'React.useState' 
      - 'React.useEffect'
*/

import { useParams } from "react-router-dom";
import "./celularDetail.css";
import * as actions from "../../redux/actions";
import React from "react";
import { useDispatch, useSelector } from "react-redux";

const CelularDetail = (props) => {
  const {id} = useParams();
  const dispatch = useDispatch()

  const celular = useSelector((state) => state.celularDetail)

  React.useEffect(()=> {
    dispatch(actions.getCelularDetails(id))
  }, [id])
  

  return (
  <div className="detail">
    <h1>{celular?.modelo}</h1>
    <img src={celular?.imagen} alt={celular?.modelo} />
    <h3>Precio: ${celular?.precio} USD</h3>
    <h5>Marca: {celular?.marca}</h5>
    <h5>Lanzamiento: {celular?.lanzamiento}</h5>
    <h5>Sistema Operativo: {celular?.sistemaOperativo}</h5>
    <h5>Descripci√≥n: {celular?.descripci√≥n}</h5>
  </div>
  );
};

export default CelularDetail;
